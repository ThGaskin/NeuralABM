# Plot the losses in a facet grid
loss:
  based_on: loss_mv
  figsize: [!dag_result full_width, !dag_result full_width]
  hue: sigma
  c: ~
  sharey: False
  col_wrap: 3

# Plot the true adjacency matrix
true_network:
  based_on:
    - .creator.universe
    - .adjacency_matrix
  universes:
    sigma: {idx: 1}
  select:
    data: true_network/_adjacency_matrix
  style:
    figure.figsize: [!dag_result half_width, !dag_result half_width]

# Plot the predicted adjacency matrix
predicted_network:
  based_on:
    - .creator.multiverse
    - .adjacency_matrix
  select_and_combine:
    fields:
      data:
        path: output_data/predictions
        transform:
          - .isel: [!dag_prev , {batch: -1}]
  col: sigma
  figsize: [ !dag_result full_width, !dag_result half_width ]

# Plot the L1 prediction error on the edge weights
error:
  based_on:
    - .creator.multiverse
    - .adjacency_matrix
    - .style_error_cmap
  select_and_combine:
    fields:
      prediction:
        path: output_data/predictions
        transform:
          - .isel: [!dag_prev , {batch: -1}]
            kwargs: {drop: True}
      true_network:
        path: true_network/_adjacency_matrix
        transform: [.data]
  transform:
    - sub: [!dag_tag prediction, !dag_tag true_network]
    - np.abs: [!dag_prev ]
      tag: data
  col: sigma
  norm:
    name: LogNorm
  vmin: 1e-7
  vmax: ~
  cbar_kwargs:
    label: Prediction error $\vert \hat{a}_{ij} - a_{ij} \vert$
  figsize: [ !dag_result full_width, !dag_result half_width ]

# Plot a facet grid  predicted and true degree distribution with uncertainty
# as a function of sigma
degree_distribution:
  based_on: degree_distribution_mv
  transform:
    - marginal_distribution: [ !dag_tag predictions, !dag_tag probabilities, !dag_tag true_data ]
      kwargs:
        yerr: 'iqr'
        exclude_dim: ['sigma']
      tag: data
  x: x
  y: y
  yerr: yerr
  hue: type
  col: sigma
  linestyle: [solid, dotted]
  smooth_kwargs:
    enabled: True
    smoothing: 1
  helpers:
    set_labels:
      x: Weighted node degree
      y: ' '
  figsize: [ !dag_result full_width, !dag_result third_width ]

# Plot a facet grid of the triangle distribution for different noise levels
triangle_distribution:
  based_on:
    - degree_distribution
    - triangle_distribution_mv
  dag_options:
    define:
      range:
        - list: [[0, 5]]
  transform:
    - marginal_distribution: [ !dag_tag predictions, !dag_tag probabilities, !dag_tag true_data ]
      kwargs:
        exclude_dim: ['sigma']
      tag: data
