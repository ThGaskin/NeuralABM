# Compare the losses as a function of the noise
loss:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.line
  select_and_combine:
    fields:
      loss:
        path: output_data/Loss
        transform:
          - .min: [!dag_prev , 'batch']
  transform:
    - .mean: [!dag_tag loss, 'seed']
      tag: data
  x: sigma
  hue: kind
  style:
    figure.figsize: [!dag_result half_width, !dag_result half_width]
  helpers:
    set_scales:
      x: log
      y: log
    set_labels:
      x: Noise level $\sigma$
      y: Prediction error
    set_legend:
      ncol: 1

# Plot a facet grid  predicted and true degree distribution with uncertainty
# as a function of sigma
degree_distribution:
  dag_options:
    define:
      nbins: 200
      range:
        - list: [[0, 30]]
  based_on: degree_distribution_mv
  transform:
    - flatten: [ !dag_tag predictions ]
      tag: predictions_flattened
    - flatten: [ !dag_tag probabilities ]
      tag: prob_flattened
    - .sel_with_drop: [!dag_tag true_data, {seed: 0}]
    - marginal_distribution: [ !dag_tag predictions_flattened, !dag_tag prob_flattened, !dag_prev ]
      kwargs:
        yerr: 'iqr'
        exclude_dim: ['sigma']
      tag: data
  x: x
  y: y
  yerr: yerr
  hue: type
  col: sigma
  col_wrap: 4
  sharey: False
  linestyle: [solid, dotted]
  smooth_kwargs:
    enabled: True
    smoothing: 1
  helpers:
    set_labels:
      x: Weighted node degree
      y: ' '

triangle_distribution:
  dag_options:
    define:
      nbins: 200
      range:
        - list: [[0, 80]]
  based_on: triangle_distribution_mv
  transform:
    - flatten: [ !dag_tag predictions ]
      tag: predictions_flattened
    - flatten: [ !dag_tag probabilities ]
      tag: prob_flattened
    - .sel_with_drop: [!dag_tag true_data, {seed: 0}]
    - marginal_distribution: [ !dag_tag predictions_flattened, !dag_tag prob_flattened, !dag_prev ]
      kwargs:
        yerr: 'iqr'
        exclude_dim: ['sigma']
      tag: data
  x: x
  y: y
  yerr: yerr
  hue: type
  col: sigma
  col_wrap: 4
  sharey: False
  linestyle: [solid, dotted]
  smooth_kwargs:
    enabled: True
    smoothing: 1
  helpers:
    set_labels:
      x: Weighted triangle count
      y: ' '

# Total error on distribution
.distribution_error:
  transform:
    - flatten: [ !dag_tag predictions ]
      tag: predictions_flattened
    - flatten: [ !dag_tag probabilities ]
      tag: prob_flattened
    - marginal_distribution_stats: [ !dag_tag predictions_flattened, !dag_tag prob_flattened ]
      kwargs:
        stat: [ std, Hellinger, KL ]
        distance_to: mode
        exclude_dim: [ sigma ]
    - .to_array: [ !dag_prev ]
      file_cache:
        read: True
        write: True
      tag: data
  x: sigma
  hue: type
  helpers:
    set_title:
      title: ''
    set_legend:
      title: ''
      custom_labels: ['Hellinger distance', 'Standard deviation', 'Relative Entropy']
    set_labels:
      x: $\sigma$
      y: ' '
    set_scales:
      x: log
      y: log
  style:
    figure.figsize: [ !dag_result third_width, !dag_result third_width ]

# Total error on the degree distribution
degree_error:
  based_on:
    - degree_distribution_mv
    - .plot.facet_grid.line
    - .default_color_cycler
    - .distribution_error
  dag_options:
    define:
      nbins: 200
      range:
        - list: [[0, 30]]
  helpers:
    set_limits:
      y: [1, ~]

# Total error on the triangle distribution
triangle_error:
  based_on:
    - triangle_distribution_mv
    - .plot.facet_grid.line
    - .default_color_cycler
    - .distribution_error
  dag_options:
    define:
      range:
        - list: [[0, 80 ]]
  helpers:
    set_limits:
      y: [ 8, ~ ]
    set_legend:
      use_legend: False
