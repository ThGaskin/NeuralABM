Data:
  synthetic_data:

    # How to generate synthetic data. Smooth densities can be generated directly using the SDE model,
    # or from an agent-based model
    type: !param
      default: from_ABM
      is_any_of: [from_ABM, smooth]
      dtype: str

    # Number of agents
    N: !is-positive-int 150

    # Domain extent, and whether the boundaries are periodic
    space: [10, 10]
    is_periodic: !is-bool true

    # Model parameters: infection radius, infection probability, infection time
    r_infectious: !is-positive 1.0
    p_infect: !is-probability 0.2
    t_infectious: !is-positive 30

    # Agent diffusivities
    sigma_s: !is-positive-or-zero 0.15
    sigma_i: !is-positive-or-zero 0.03
    sigma_r: !is-positive-or-zero 0.15

    # Noise parameter for the smooth model
    sigma: !is-positive-or-zero 0.1

    # Number of steps to run
    num_steps: 100

NeuralNet:
  num_layers: !is-positive-int 3
  nodes_per_layer:
    default: !is-positive-int 20
  biases:
    default: ~
  activation_funcs:
    default: sigmoid
    layer_specific:
      -1: abs
  learning_rate: !is-positive 0.002

  # Priors on p_infect, t_infectious, sigma.
  # t_infectious is scaled by a factor of 10
  prior:
    - distribution: uniform
      parameters:
        lower: 0
        upper: 1
    - distribution: uniform
      parameters:
        lower: 0.1
        upper: 3
    - distribution: uniform
      parameters:
        lower: 0
        upper: 0.8

Training:
  batch_size: !is-positive-int 100
  loss_function:
    name: MSELoss
    kwargs:
      reduction: sum
  to_learn: [ p_infect, t_infectious, sigma ]
  device: cpu
  num_threads: ~

  # Scale the infection time by a factor of 10 to ensure all learned parameters are of equal magnitude.
  # This makes training more efficient.
  scaling_factors:
    t_infectious: 10
