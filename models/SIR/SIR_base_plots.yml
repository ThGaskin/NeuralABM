---
# ======================================================================================================================
#  ╦  ╦╔═╗╦═╗╦╔═╗╔╗ ╦  ╔═╗╔═╗
#  ╚╗╔╝╠═╣╠╦╝║╠═╣╠╩╗║  ║╣ ╚═╗
#   ╚╝ ╩ ╩╩╚═╩╩ ╩╚═╝╩═╝╚═╝╚═╝
# ======================================================================================================================
.variables:
  base_path:        &base_path    data/SIR

.latex_off:
  style:
    text.usetex: False

.latex_on:
  style:
    text.usetex: True
    mathtext.fontset: cm
    font.family: serif
    text.latex.preamble: \usepackage{amssymb} \usepackage{amsmath}

.default_style:
  based_on:
    - .latex_on    # Change this to .latex_on to use latex

  # Make colors and page widths accessible across all plots using the dag_options
  dag_options:
    define: &colors
      c_yellow:         &yellow           '#F5DDA9'
      c_darkblue:       &darkblue         '#2F7194'
      c_red:            &red              '#ec7070'
      c_skyblue:        &skyblue          '#97c3d0'
      c_darkgreen:      &darkgreen        '#48675A'
      c_lightbrown:     &lightbrown       '#C6BFA2'
      c_orange:         &orange           '#EC9F7E'
      c_lightgreen:     &lightgreen       '#AFD8BC'
      c_grey:           &grey             '#3D4244'
      c_pink:           &pink             '#F8A6A6'

      full_width:       &full_width       7.5
      half_width:       &half_width       !expr 7.5/2
      third_width:      &third_width      !expr 7.5/3
      quarter_width:    &quarter_width    !expr 7.5/4
      fifth_width:      &fifth_width      !expr 7.5/5

  style:
    font.size:          &fontsize 8
    axes.titlesize:     *fontsize
    axes.labelsize:     *fontsize
    xtick.labelsize:    *fontsize
    ytick.labelsize:    *fontsize
    grid.linewidth:     0.5
    savefig.bbox:       tight
    axes.prop_cycle: !format
      fstr: "cycler('color', ['{colors[c_lightgreen]:}', '{colors[c_red]:}', '{colors[c_darkgreen]:}'])"
      colors:
        <<: *colors
    axes.grid:          True
    axes.spines.top:    False
    axes.spines.right:  False
    legend.fontsize:    8

  helpers:
    save_figure:
      dpi: 900
  file_ext: pdf

# ======================================================================================================================
#  ╔╦╗╔═╗╔╦╗╔═╗╦  ╔═╗╔╦╗╔═╗╔═╗
#   ║ ║╣ ║║║╠═╝║  ╠═╣ ║ ║╣ ╚═╗
#   ╩ ╚═╝╩ ╩╩  ╩═╝╩ ╩ ╩ ╚═╝╚═╝
# ======================================================================================================================
# -- Overloads ---------------------------------------------------------------------------------------------------------
# Overload some configs to insert model-specific settings
.creator.universe:
  based_on:
    - .creator.universe
    - .default_style

  dag_options:
    select_path_prefix: *base_path

.creator.multiverse:
  based_on:
    - .creator.multiverse
    - .default_style

  select_and_combine:
    base_path: *base_path

# Base function for probability densities
.plot.prob_density:
  module: model_plots.HarrisWilson
  plot_func: plot_prob_density

# ======================================================================================================================
#  ╔═╗╦  ╔═╗╔╦╗╔═╗
#  ╠═╝║  ║ ║ ║ ╚═╗
#  ╩  ╩═╝╚═╝ ╩ ╚═╝
# ======================================================================================================================

# -- Plot of the training loss -----------------------------------------------------------------------------------------
loss:
  based_on:
    - .creator.universe
    - .plot.facet_grid.line
  select:
    data: loss
  color: black
  helpers:
    set_labels:
      x: Batch
      y: Training loss
    set_scales:
      y: log

# -- Animated state of the agents --------------------------------------------------------------------------------------
state:
  based_on:
    - .creator.universe
    - .plot.abm
    - .animation.ffmpeg
  select:
    x:
      path: position
      transform:
        - .sel: [!dag_prev , {coords: x}]
          kwargs:
            drop: true
    y:
      path: position
      transform:
        - .sel: [ !dag_prev , {coords: y}]
          kwargs:
            drop: true
    kinds:
      path: kinds
      transform:
        - .data: [!dag_prev ]

  # Combine coordinates and kinds into a single Dataset
  transform:
    - xr.Dataset:
      kwargs:
        data_vars:
          x: !dag_tag x
          y: !dag_tag y
          kind: !dag_tag kinds
      tag: data

  to_plot:
    data:
      cmap:
        susceptible: *lightgreen
        infected: *red
        recovered: *darkgreen
      vmin: 0
      vmax: 2
      size_scale: 0.0005
  hue: kind
  x: x
  y: y
  frames: time
  # Colorbar settings
  cmap:
    susceptible: *lightgreen
    infected: *red
    recovered: *darkgreen
  cbar_kwargs:
    shrink: 0.8
  style:
    savefig.bbox: ~
    axes.grid: True
    axes.spines.top: True
    axes.spines.right: True
  # Animation control

# -- Plot of the parameter predictions  --------------------------------------------------------------------------------
predictions_uni:
  based_on:
    - .creator.universe
    - .plot.facet_grid.line
  select:
    data:
      path: parameters
      transform:
        - .data: [ !dag_prev ]
  col: parameter
  sharey: False
  style:
    figure.figsize: [ *half_width, *half_width ]

predictions_mv:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.line
  select_and_combine:
    fields:
      data:
        path: parameters
        transform:
          - .data: [ !dag_prev ]
  col: parameter
  x: batch
  add_legend: False
  sharey: False
  style:
    figure.figsize: [ *half_width, *half_width ]

# -- Distribution plots  -----------------------------------------------------------------------------------------------
# Base operations for computing the joint (universe case)
.joint_uni:
  based_on:
    - .creator.universe
  dag_options:
    meta_operations:
      get_joint:
          - compute_joint: [!arg 0 , !arg 1 ]
            kwargs:
              bins: !kwarg bins
              range: !kwarg range
              normalize: !kwarg normalize
              differential: !kwarg differential
  select:
    parameters:
      path: parameters
      transform: [.data]
    probabilities:
      path: loss
      transform:
        - mul: [!dag_prev , -1]
        - np.exp: [!dag_prev ]

# Base operations for computing the joint (multiverse case)
.joint_mv:
  expected_multiverse_ndim: [ 1 ]
  based_on:
    - .creator.multiverse
  dag_options:
    meta_operations:
      get_joint:
        - flatten_dims: [!arg 0, ['seed', 'batch'], 'sample']
        - .transpose: [!dag_prev ]
        - flatten_dims: [!arg 1, ['seed', 'batch'], 'sample']
        - .transpose: [!dag_prev ]
        - compute_joint: [!dag_node -3 , !dag_prev ]
          kwargs:
            bins: !kwarg bins
            range: !kwarg range
            normalize: !kwarg normalize
            differential: !kwarg differential
  select_and_combine:
    fields:
      parameters:
        path: parameters
        transform: [.data]
      probabilities:
        path: loss
        transform:
          - mul: [!dag_prev , -1]
          - np.exp: [!dag_prev ]

# Base operations for computing the marginal (universe case)
.marginal_uni:
  based_on: .joint_uni
  dag_options:
    meta_operations:
      get_marginal:
        - compute_joint: [!arg 0 , !arg 1 ]
          kwargs:
            bins: !kwarg bins
            range: !kwarg range
            normalize: False
            differential: ~
        - compute_marginal: [!dag_prev , !kwarg parameter]
          kwargs:
            normalize: !kwarg normalize
  select:
    parameters:
      path: parameters
      transform: [.data]
    probabilities:
      path: loss
      transform:
        - mul: [!dag_prev , -1]
        - np.exp: [!dag_prev ]

# Base operations for computing the marginal (multiverse case)
.marginal_mv:
  based_on: .joint_mv
  dag_options:
    meta_operations:
      get_marginal:
        - flatten_dims: [!arg 0, ['seed', 'batch'], 'sample']
        - .transpose: [!dag_prev ]
        - flatten_dims: [!arg 1, ['seed', 'batch'], 'sample']
        - .transpose: [!dag_prev ]
        - compute_joint: [!dag_node -3 , !dag_prev ]
          kwargs:
            bins: !kwarg bins
            range: !kwarg range
            normalize: False
            differential: ~
        - compute_marginal: [!dag_prev , !kwarg parameter]
          kwargs:
            normalize: !kwarg normalize
