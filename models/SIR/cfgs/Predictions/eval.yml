# ======================================================================================================================
#  ╦  ╦╔═╗╦═╗╦╔═╗╔╗ ╦  ╔═╗╔═╗
#  ╚╗╔╝╠═╣╠╦╝║╠═╣╠╩╗║  ║╣ ╚═╗
#   ╚╝ ╩ ╩╩╚═╩╩ ╩╚═╝╩═╝╚═╝╚═╝
# ======================================================================================================================

.variables:
  base_path:        &base_path    data/SIR
  loss_limit:       &loss_limit   1e-15

  colors: &colors
    yellow:         &yellow           '#F5DDA9'
    darkblue:       &darkblue         '#2F7194'
    red:            &red              '#ec7070'
    skyblue:        &skyblue          '#97c3d0'
    darkgreen:      &darkgreen        '#48675A'
    lightbrown:     &lightbrown       '#C6BFA2'
    orange:         &orange           '#EC9F7E'
    lightgreen:     &lightgreen       '#AFD8BC'
    grey:           &grey             '#3D4244'

  page_widths:
    full_width:     &full_width       7.00787402
    half_width:     &half_width       !expr 7.00787402 / 2
    third_width:    &third_width      !expr 7.00787402 / 3
    quarter_width:  &quarter_width    !expr 7.00787402 / 4
    fifth_width:    &fifth_width      !expr 7.00787402 / 5

  true_values:
    p_infectious:   &p_infectious     0.2
    t_infectious:   &t_infectious     14

# ======================================================================================================================
#  ╔═╗╦╦═╗  ╔╦╗╔═╗╔╗╔╔═╗╦╔╦╗╦╔═╗╔═╗
#  ╚═╗║╠╦╝   ║║║╣ ║║║╚═╗║ ║ ║║╣ ╚═╗
#  ╚═╝╩╩╚═  ═╩╝╚═╝╝╚╝╚═╝╩ ╩ ╩╚═╝╚═╝
# ======================================================================================================================

# Comparison of densities of agent types for the simulation (top) and prediction (bottom)
densities:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.errorbands
  select_and_combine:
    fields:
      pred_counts:
        path: predicted_counts
        transform:
          - .sel: [ !dag_prev , { kind: [ 'susceptible', 'infected', 'recovered' ] } ]
      true_counts:
        path: true_counts
        transform:
          - .sel: [ !dag_prev , { kind: [ 'susceptible', 'infected', 'recovered' ] } ]
  transform:
    - .mean: [ !dag_tag pred_counts, seed ]
      tag: mean_pred
    - .std: [ !dag_tag pred_counts, seed ]
      tag: std_pred
    - .mean: [ !dag_tag true_counts, seed ]
      tag: mean_true
    - .std: [ !dag_tag true_counts, seed ]
      tag: std_true
    - xr.Dataset:
      - density: !dag_tag mean_pred
        err: !dag_tag std_pred
      tag: pred_dset
    - xr.Dataset:
      - density: !dag_tag mean_true
        err: !dag_tag std_true
      tag: true_dset
    - concat_along: [ [ !dag_tag true_dset, !dag_tag pred_dset ], 'type', [ 'true', 'predicted' ] ]
      tag: data

    - .sel: [!dag_tag true_dset, { kind: infected }]
    - .argmax: [ !dag_prev , time ]
    - getitem: [!dag_prev , 'density']
    - .item: [!dag_prev ]
      tag: true_peak

    - .sel: [ !dag_tag pred_dset, { kind: infected } ]
    - .argmax: [ !dag_prev , time ]
    - getitem: [ !dag_prev , 'density' ]
    - .item: [ !dag_prev ]
      tag: pred_peak

  x: time
  row: type
  y: density
  yerr: err
  hue: kind
  add_legend: false
  linewidth: 1.5
  figsize: [ *half_width, *half_width ]
  helpers:
    set_title:
      title: ~
    set_labels:
      y: ' '
    # Plot the times of infection peaks
    axis_specific:
      true:
        axis: [ 0, 0 ]
        set_hv_lines:
          vlines:
            - pos: !dag_result true_peak
              color: *red
              linestyle: dotted
      predicted:
        axis: [ -1, -1 ]
        set_hv_lines:
          vlines:
            - pos: !dag_result pred_peak
              color: *red
              linestyle: dotted
  style:
    axes.prop_cycle: !format
      fstr: "cycler('color', ['{colors[red]:}', '{colors[darkgreen]:}', '{colors[lightgreen]:}'])"
      colors: *colors
  file_ext: pdf


# Generate densities by drawing from the joint distribution of the parameters
densities_from_joint:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.errorbands
  select_and_combine:
    fields:
      parameters:
        path: parameters
        transform: [.data]
      loss:
        path: loss
        transform:
          - mul: [ !dag_prev , -1 ]
          - np.exp: [ !dag_prev ]
      true_data:
        path: true_counts
        transform: [.data]
      cfg:
        path: ../../cfg
        transform:
          - getitem: [!dag_prev , 'SIR']
        subspace:
          seed: [0]
  transform:
    # Extract the cfg
    - .data: [!dag_tag cfg]
    - getitem: [!dag_prev , 0]
      tag: cfg_flattened

    # Flatten the true counts
    - .isel: [!dag_tag true_data, {seed: 0}]
      kwargs: {drop: True}
      tag: true_data_flattened

    # Flatten the parameters
    - flatten_dims: [ !dag_tag parameters , [ seed, time ] , sample ]
    - .sel: [!dag_prev , {'sample': !slice [~, ~, 100]}]
      tag: parameters_flattened

    # Flatten and normalise the loss
    - flatten_dims: [ !dag_tag loss , [ seed, time ], sample ]
    - .sel: [ !dag_prev , { 'sample': !slice [ ~, ~, 100 ] } ]
    - .sum: [ !dag_prev ]
    - div: [ !dag_node -2, !dag_prev ]

    # Copy the loss for each parameter
    - SIR_densities_from_joint: [!dag_tag parameters_flattened, !dag_prev ]
      kwargs:
        true_counts: !dag_tag true_data_flattened
        cfg: !dag_tag cfg_flattened
      file_cache:
        read: True
        write: True
      tag: data
  x: time
  y: mean
  yerr: std
  hue: type
  col: kind
  col_wrap: 3
  sharey: False
  add_legend: False
  figsize: [ *full_width, *third_width ]
  helpers:
    set_labels:
      y: ' '
    axis_specific:
      0:
        axis: [0, 0]
        set_legend:
          use_legend: True
          gather_from_fig: True
          custom_labels: [mean, mode, true data]
  style:
    axes.prop_cycle: !format
      fstr: "cycler('color', ['{colors[darkblue]:}', '{colors[orange]:}', '{colors[lightbrown]:}'])"
      colors: *colors
  file_ext: pdf
# ======================================================================================================================
#  ╔╦╗╔═╗╦═╗╔═╗╦╔╗╔╔═╗╦  ╔═╗
#  ║║║╠═╣╠╦╝║ ╦║║║║╠═╣║  ╚═╗
#  ╩ ╩╩ ╩╩╚═╚═╝╩╝╚╝╩ ╩╩═╝╚═╝
# ======================================================================================================================
marginals: !pspace
  based_on: marginals_mv
  dag_options:
    define:
      parameter_idx: !sweep
        default: 0
        range: [3]
  select_and_combine:
    fields:
      true_val_dict:
        transform:
          - dict:
              p_infect: 0.2
              t_infectious: 14
              sigma: 0
  style:
    figure.figsize: [ *third_width, *quarter_width ]
  info_box_labels:
    info_str: !coupled-sweep
      default: '$\mathrm{mean}$'
      values: ['$E[\hat{\beta}]$', '$E[\hat{\tau}]$', '$E[\hat{\sigma}]$']
      target_name: parameter_idx
    mode: '$\mathrm{mode}$'
  helpers:
    set_labels:
      x: !coupled-sweep
        default: '$x$'
        values: ['$\beta$', '$\tau$', '$\sigma$']
        target_name: parameter_idx
    set_limits:
      x: !coupled-sweep
        default: [0, ~]
        values: [[min, 0.6], [5, max], [0, 0.6]]
        target_name: parameter_idx
  smooth_kwargs:
    sigma: 3.0
