# ======================================================================================================================
#  ╔═╗╦╦═╗  ╔╦╗╔═╗╔╗╔╔═╗╦╔╦╗╦╔═╗╔═╗
#  ╚═╗║╠╦╝   ║║║╣ ║║║╚═╗║ ║ ║║╣ ╚═╗
#  ╚═╝╩╩╚═  ═╩╝╚═╝╝╚╝╚═╝╩ ╩ ╩╚═╝╚═╝
# ======================================================================================================================
# Generate densities by drawing from the joint distribution of the parameters
densities_from_joint:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.errorbands
    - .joint_mv
  select_and_combine:
    fields:
      true_data:
        path: true_counts
        transform: [.data]
        subspace:
          seed: [ 0 ]
      cfg:
        path: ../../cfg
        transform:
          - getitem: [!dag_prev , 'SIR']
        subspace:
          seed: [0]
  transform:
    # Flatten the cfg
    - .data: [!dag_tag cfg]
    - getitem: [!dag_prev , 0]
      tag: cfg_flattened

    # Flatten the true counts
    - .isel: [!dag_tag true_data, {seed: 0}]
      kwargs: {drop: True}
      tag: true_data_flattened

    # Get the normalized joint distribution
    - get_joint: [!dag_tag parameters, !dag_tag probabilities]
      kwargs:
        bins: 100
        range: [[0, 1], [1, 30], [0, 0.5]]
        normalize: True
        differential: 1
      file_cache:
        read: True
        write: True
      tag: joint
    - getitem: [!dag_prev , 'mean']
    - .fillna: [!dag_prev , 0]
    - SIR_densities_from_joint: [!dag_prev ]
      kwargs:
        true_counts: !dag_tag true_data_flattened
        cfg: !dag_tag cfg_flattened
      file_cache:
        read: True
        write: True
      tag: data
  x: time
  y: mean
  yerr: std
  hue: type
  col: kind
  sharey: False
  add_legend: False
  figsize: [ !dag_result full_width, !dag_result third_width ]
  helpers:
    set_labels:
      y: ' '
    axis_specific:
      0:
        axis: [0, 0]
        set_legend:
          use_legend: True
          gather_from_fig: True
          custom_labels: [mean prediction, mode prediction, true data]
  style:
    axes.prop_cycle: !format
      fstr: "cycler('color', ['{colors[darkblue]:}', '{colors[orange]:}', '{colors[lightbrown]:}'])"
      colors:
        darkblue: '#2F7194'
        orange: '#EC9F7E'
        lightbrown: '#C6BFA2'
  file_ext: pdf

# ======================================================================================================================
#  ╔╦╗╔═╗╦═╗╔═╗╦╔╗╔╔═╗╦  ╔═╗
#  ║║║╠═╣╠╦╝║ ╦║║║║╠═╣║  ╚═╗
#  ╩ ╩╩ ╩╩╚═╚═╝╩╝╚╝╩ ╩╩═╝╚═╝
# ======================================================================================================================

# Plot the marginals of the parameters
marginals: !pspace
  based_on:
    - .marginal_mv
    - .plot.prob_density
  dag_options:
    define:
      parameter: !sweep
        default: 'p_infect'
        values: ['p_infect', 't_infectious', 'sigma']
      label: !coupled-sweep
        default: '$\beta$'
        values: ['$\beta$', '$\tau$', '$\sigma$']
        target_name: parameter
  transform:
    - get_marginal: [!dag_tag parameters, !dag_tag probabilities]
      kwargs:
        parameter: !dag_tag parameter
        bins: 100
        range: [[0, 1], [1, 30], [0, 1]]
        normalize: True
      tag: data
    - mode: [ !dag_tag data]
      kwargs:
        p: mean
    - .coords: [!dag_prev , !dag_tag parameter]
    - .item: [!dag_prev ]
    - .format: [ '{:.2f}', !dag_prev ]
      tag: mode
    - mean: [ !dag_tag data ]
      kwargs:
        x: !dag_tag parameter
        p: mean
    - getitem: [!dag_prev , 'mean']
      tag: mean
    - std: [ !dag_tag data ]
      kwargs:
        x: !dag_tag parameter
        p: mean
    - getitem: [!dag_prev , 'std']
    - .format: [ '{:.2f} ± {:.2f}', !dag_tag mean, !dag_prev ]
      tag: info_str
  compute_only: [data, info_str, mode]
  info_box_labels:
    info_str: !coupled-sweep
      default: '$\mathrm{mean}$'
      values: ['${\rm E}[\hat{\beta}]$', '${\rm E}[\hat{\tau}]$', '${\rm E}[\hat{\sigma}]$']
      target_name: parameter
    mode: '$\mathrm{mode}$'
  x: !dag_result parameter
  y: mean
  yerr: std
  color: !dag_result c_darkblue
  helpers:
    set_labels:
      x: !dag_result label
  smooth_kwargs:
    enabled: True
    sigma: 2
  style:
    figure.figsize: [!dag_result half_width, !dag_result quarter_width]



# Plot the joint distribution over p_infect and t_infectious
joint:
  based_on:
    - .joint_mv
    - .plot.facet_grid.pcolormesh
  transform:
    - get_joint: [!dag_tag parameters , !dag_tag probabilities ]
      kwargs: {bins: 100, range: ~, normalize: False, differential: ~}
    - getitem: [!dag_prev , 'mean']
    - .sum: [!dag_prev , 'sigma']
      tag: data
  x: p_infect
  y: t_infectious
  helpers:
    set_labels:
      x: $\beta$
      y: $\tau$
  cmap:
    continuous: true
    from_values:
      0: !dag_result c_darkblue
      1: !dag_result c_yellow
  cbar_kwargs:
    label: ~

# Plot the prior densities on the parameters
priors:
  based_on:
    - .creator.multiverse
    - .plot.multiplot
  select_and_combine:
    fields:
      parameters:
        path: parameters
        transform:
          - .isel: [!dag_prev , {batch: 0}]
  transform:
    - .isel: [!dag_tag parameters, {parameter: 0}]
      tag: p
    - .isel: [!dag_tag parameters, {parameter: 1}]
      tag: t
    - .isel: [!dag_tag parameters, {parameter: 2}]
      tag: sigma
  to_plot:
    [0, 0]:
      - function: sns.histplot
        data: !dag_result p
    [1, 0]:
      - function: sns.histplot
        data: !dag_result t
    [2, 0]:
      - function: sns.histplot
        data: !dag_result sigma
  color: !dag_result c_darkblue
  linewidth: 0.5
  helpers:
    axis_specific:
      0:
        axis: [0, 0]
        set_labels:
          x: $\beta$
      1:
        axis: [ 1, 0 ]
        set_labels:
          x: $\tau$
      2:
        axis: [ 2, 0 ]
        set_labels:
          x: $\sigma$
    setup_figure:
      nrows: 1
      ncols: 3
    set_labels:
      y: ' '
  compute_only: []
  style:
    figure.figsize: [!dag_result full_width, !dag_result quarter_width]


# Plot the evolution of the losses for all the runs
loss:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.line
  select_and_combine:
    fields:
      data: loss
  hue: seed
  helpers:
    set_legend:
      use_legend: False
    set_scales:
      y: log
  color: !dag_result c_grey
  alpha: 0.5
  style:
    figure.figsize: [ !dag_result full_width, !dag_result half_width ]

# Plot the evolution of the predictions
predictions:
  based_on: predictions_mv
  alpha: 0.5
  c: !dag_result c_grey
