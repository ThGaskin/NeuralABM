# ======================================================================================================================
#  ╔═╗╦  ╔═╗╔╦╗╔═╗
#  ╠═╝║  ║ ║ ║ ╚═╗
#  ╩  ╩═╝╚═╝ ╩ ╚═╝
# ======================================================================================================================

# Animated state plot
state:
  based_on: state

  # Animation control
  enabled: True

  # Plot helpers
  helpers:
    setup_figure:
      figsize: [8, 8]
    set_title:
      title: 'Diffusive SIR model'
    set_limits:
      x: [0, 10]
      y: [0, 10]
    set_ticks:
      x: &labels
        major:
          locs: [0, 10]
          labels: ['-L', '+L']
      y:
        <<: *labels

# Plot the evolution of the training loss
loss:
  based_on: loss
  style:
    figure.figsize: [ !dag_result full_width, !dag_result third_width ]

# Plot the evolution of the parameters
predictions:
  based_on: predictions_uni

# Plot the marginals of all the parameters
marginals:
  based_on:
    - .creator.universe
    - .plot.facet_grid.density
  select:
    parameters:
      path: parameters
      transform: [.data]
    probabilities:
      path: loss
      transform: [neg_exp]
  transform:
    - broadcast: [!dag_tag parameters, !dag_tag probabilities]
    - xr.DataArray:
        data: [100, 100, 100]
        dims: ['parameter']
        coords: {parameter: [p_infect, t_infectious, sigma]}
      tag: bins
    - xr.DataArray:
        data: [[[0, 1], [~, ~]], [[1, 30], [~, ~]], [[0, 1], [~, ~]]]
        dims: ['parameter', 'dim1', 'dim0']
        coords: {parameter: [p_infect, t_infectious, sigma]}
      tag: ranges
    - marginal_from_ds: [!dag_node -3, !dag_tag bins, !dag_tag ranges ]
      kwargs:
        x: x
        y: loss
        statistic: mean
        exclude_dim: [parameter]
      tag: data
  x: x
  y: y
  sharex: False
  sharey: False
  col: parameter
  smooth_kwargs:
    enabled: False
    smoothing: 20

# Plot the densities obtained from the joint of the p_infect and t_infectious parameters
# Generate densities by drawing from the joint distribution of the parameters
densities_from_joint:
  based_on:
    - .creator.universe
    - .plot.facet_grid.errorbands
    - .cycler_blue_orange_brown
  select:
    parameters:
      path: parameters
      transform: [.data]
    probabilities:
      path: loss
      transform: [neg_exp]
    true_data:
      path: true_counts
      transform: [.data]
    cfg:
      path: ../../cfg
      transform:
        - getitem: [!dag_prev , 'SIR']
  transform:
    # Get the normalized joint distribution
    - joint_DD: [!dag_tag parameters, !dag_tag probabilities]
      kwargs:
        bins: 100
        ranges: [[0, 1], [1, 30], [0, 0.5]]
      tag: joint
    - .fillna: [!dag_prev , 0]
    - SIR_densities_from_joint: [!dag_prev ]
      kwargs:
        true_counts: !dag_tag true_data
        cfg: !dag_tag cfg
      file_cache:
        read: False
        write: False
    - .sel: [!dag_prev , {type: [true data, mean prediction]}]
      tag: data
  x: time
  y: mean
  yerr: std
  hue: type
  col: kind
  sharey: False
  add_legend: False
  figsize: [ !dag_result full_width, !dag_result third_width ]
  helpers:
    set_labels:
      y: ' '
    axis_specific:
      0:
        axis: [0, 0]
        set_legend:
          use_legend: True
          gather_from_fig: True
