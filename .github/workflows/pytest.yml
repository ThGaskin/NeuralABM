# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write
  pages: write      # to deploy to Pages
  id-token: write   # to verify the deployment originates from an appropriate source

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          utopya projects register . --with-models --exists-action overwrite
          coverage run -m pytest tests/
      - name: Generate Coverage Report
        run: |  
          coverage report -m && coverage json -o ./coverage/coverage-summary.json && coverage html -d ./coverage
      - name: Run models
        run: |
          utopya run HarrisWilson --pp num_epochs=100
          utopya run SIR --pp num_epochs=10
          utopya run Kuramoto --pp num_epochs=10
          utopya run HarrisWilsonNW --pp num_epochs=10
          utopya run Covid --pp num_epochs=10

      # Create a coverage badge
      - name: Create coverage badge
        if: github.ref == 'refs/heads/main'
        uses: jaywcjlove/coverage-badges-cli@main
        with:
          style: classic
          source: ./coverage/coverage-summary.json
          output: ./coverage/coverage-badge.svg
          jsonPath: totals.percent_covered_display

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './coverage'

  # Deploy coverage result to GitHub Pages
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions: write-all
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Delete previous deployment
        uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: github-pages
          onlyRemoveDeployments: true

      - name: Deploy coverage report
        uses: actions/deploy-pages@v2
        id: deployment

